unit FichaClientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FichaBase, Vcl.StdCtrls, Vcl.ExtCtrls,
  Vcl.ComCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.Client, Data.DB,
  FireDAC.Comp.DataSet;

type
  TFormFichaClientes = class(TFormFichaBase)
    PanelReg: TPanel;
    LabelReg: TLabel;
    PanelNombre: TPanel;
    LabelNombre: TLabel;
    EditNombre: TEdit;
    PanelFecha: TPanel;
    LabelFecha: TLabel;
    DateTimePickerFecha: TDateTimePicker;
    ComboBoxRegimen: TComboBox;
    FDQueryCliente: TFDQuery;
    FDTransactionCliente: TFDTransaction;

    constructor Create(AOwner: TComponent; LastCode: Integer; mode: Integer);
      reintroduce; overload;
    procedure btnAceptarClick(Sender: TObject);
    function TodoCorrecto(): Boolean;

  private
    { Private declarations }
  public
    { Public declarations }

    opcion: Integer;
    CodigoNuevo: Integer;
  end;

implementation

{$R *.dfm}

procedure TFormFichaClientes.btnAceptarClick(Sender: TObject);
var
  FechaFormateada: string;
  InitRegimen: string;
begin
  if opcion = 3 then
  begin
    Self.Close;
  end
  else if TodoCorrecto then
    try
      FDTransactionCliente.StartTransaction;
      FechaFormateada := FormatDateTime('YYYY-MM-DD', DateTimePickerFecha.Date);
      InitRegimen := AnsiUpperCase(ComboBoxRegimen.Text[1]);

      if AnsiUpperCase(ComboBoxRegimen.Text) = 'CANARIAS' then
        InitRegimen := 'G'
      else if InitRegimen = 'E' then
        if AnsiUpperCase(ComboBoxRegimen.Text) = 'EXTRANJERO' then
          InitRegimen := 'X';

      FDTransactionCliente.StartTransaction;

      FDQueryCliente.Close;
      case opcion of
        1: // Agregar nuevo cliente
          begin
            FDQueryCliente.SQL.Text :=
              'INSERT INTO CLIENTES (NCODIGO, CNOMBRE, CREG_FISCAL) ' +
              'VALUES (:Codigo, :Nombre, :Regimen)';
            FDQueryCliente.ParamByName('Codigo').AsInteger := CodigoNuevo;
          end;

        2: // Actualizar cliente
          begin
            FDQueryCliente.SQL.Text := 'UPDATE CLIENTES SET CNOMBRE = :Nombre, '
              + 'CREG_FISCAL = :Regimen WHERE NCODIGO = :Codigo';
            FDQueryCliente.ParamByName('Codigo').AsInteger :=
              StrToInt(EditCodigo.Text);
          end;
      end;

      FDQueryCliente.ParamByName('Nombre').AsString := EditNombre.Text;
      FDQueryCliente.ParamByName('Regimen').AsString := InitRegimen;

      FDQueryCliente.ExecSQL;

      FDTransactionCliente.Commit;

      Self.Close;

    except
      on E: Exception do
      begin
        FDTransactionCliente.Rollback;
        MessageDlg('Error en la operación: ' + E.Message, mtError, [mbOK], 0);
      end;
    end;
end;

constructor TFormFichaClientes.Create(AOwner: TComponent; LastCode: Integer;
  mode: Integer);
begin
  inherited Create(AOwner, LastCode, mode);

  opcion := mode;
  CodigoNuevo := LastCode;

  case mode of
    1:
      begin
        Self.Caption := 'Añadir';
        lblTitulo.Caption := 'Agregar nuevo cliente';
      end;
    2:
      begin
        lblTitulo.Caption := 'Actualizar cliente';
        Self.Caption := 'Actualizar';

      end;
    3:
      begin
        Self.Caption := 'Información';
        lblTitulo.Caption := 'Información del cliente seleccionado';
        EditNombre.ReadOnly := True;

      end;
  end;

  if opcion <> 3 then
  begin
    ComboBoxRegimen.Items.Add('Exento');
    ComboBoxRegimen.Items.Add('Normal');
    ComboBoxRegimen.Items.Add('Recargo');
    ComboBoxRegimen.Items.Add('Internacional');
    ComboBoxRegimen.Items.Add('Extranjero');
    ComboBoxRegimen.Items.Add('Canarias');
    ComboBoxRegimen.ItemIndex := 1;
  end;
end;

function TFormFichaClientes.TodoCorrecto: Boolean;
var
  correcto: Boolean;
begin
  correcto := True;

  if (EditNombre.Text = '') or (ComboBoxRegimen.ItemIndex = -1) then
  begin
    MessageDlg('Por favor, rellene todos los campos.', mtError, [mbOK], 0);
    correcto := False;
    Exit;
  end;

  if ComboBoxRegimen.ItemIndex = -1 then
  begin
    MessageDlg('Seleccione un régimen fiscal válido.', mtError, [mbOK], 0);
    correcto := False;
    Exit;
  end;

  if DateTimePickerFecha.Date = 0 then
  begin
    MessageDlg('Por favor, seleccione una fecha.', mtError, [mbOK], 0);
    correcto := False;
    Exit;
  end;

  Result := correcto;
end;

end.
