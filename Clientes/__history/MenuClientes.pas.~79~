unit MenuClientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, MenuBase, Data.DB, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.Client, FireDAC.Comp.DataSet, Vcl.Buttons, Vcl.DBCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.ExtCtrls, FichaClientes,
  ModuloDatos;

type
  TFormMenuClientes = class(TFormMenuBase)
    FDTableNCODIGO: TIntegerField;
    FDTableDFECHA_ULT_VENTA: TDateField;
    FDTableCNOMBRE: TStringField;
    FDTableREG_FISCAL: TStringField;
    FDTableNOMBRE_REGIMEN: TStringField;
    procedure btnAgregarClick(Sender: TObject);
    procedure OnCreate(Sender: TObject);
    procedure FDTableCalcFields(DataSet: TDataSet);
    procedure btnActualizarClick(Sender: TObject);
    procedure btnVerClick(Sender: TObject);
    procedure DBNavigatorClick(Sender: TObject; Button: TNavigateBtn);
    procedure Actualizar(Sender: TObject);
    procedure DataSourceDataChange(Sender: TObject; Field: TField);

  private
    { Private declarations }
    CodigoSeleccionado: Integer;
  public
    { Public declarations }
  end;

var
  FormMenuClientes: TFormMenuClientes;

implementation

{$R *.dfm}

procedure TFormMenuClientes.btnActualizarClick(Sender: TObject);
var
  FormUpdateClientes: TFormFichaClientes;
begin
  FormUpdateClientes := TFormFichaClientes.Create(Self, UltimoCodigo, 2);
  FormUpdateClientes.Caption := 'Actualizar';
  FormUpdateClientes.lblTitulo.Caption := 'Actualizar cliente';
  FormUpdateClientes.EditCodigo.Text := DataSource.DataSet.FieldByName
    ('NCODIGO').AsString;
  FormUpdateClientes.ShowModal;
  FormUpdateClientes.Free;
end;

procedure TFormMenuClientes.btnAgregarClick(Sender: TObject);
var
  FormAddClientes: TFormFichaClientes;
begin
  FormAddClientes := TFormFichaClientes.Create(Self, UltimoCodigo, 1);

  FormAddClientes.ShowModal;
  FormAddClientes.Free;
end;

procedure TFormMenuClientes.btnVerClick(Sender: TObject);
var
  FormVerClientes: TFormFichaClientes;
begin
  FormVerClientes := TFormFichaClientes.Create(Self, UltimoCodigo, 3);
  try
    FormVerClientes.EditNombre.Text := DataSource.DataSet.FieldByName
      ('CNOMBRE').AsString;
    FormVerClientes.DateTimePickerFecha.DateTime :=
      DataSource.DataSet.FieldByName('DFECHA_ULT_VENTA').AsDateTime;
    FormVerClientes.EditCodigo.Text := DataSource.DataSet.FieldByName
      ('NCODIGO').AsString;

    FormVerClientes.ComboBoxRegimen.Clear;
    FormVerClientes.ComboBoxRegimen.Items.Add
      (DataSource.DataSet.FieldByName('NOMBRE_REGIMEN').AsString);
    FormVerClientes.ComboBoxRegimen.ItemIndex := 0;

    FormVerClientes.ShowModal;
  finally
    FormVerClientes.Free;
  end;
end;

procedure TFormMenuClientes.FDTableCalcFields(DataSet: TDataSet);
begin
  case DataSet.FieldByName('CREG_FISCAL').AsString[1] of
    'E':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Exento';
    'N':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Normal';
    'R':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Recargo';
    'I':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Internacional';
    'X':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Extranjero';
    'G':
      DataSet.FieldByName('NOMBRE_REGIMEN').AsString := 'Canarias'
  end;

end;

procedure TFormMenuClientes.OnCreate(Sender: TObject);
begin
  UltimoCodigo := GetLastCodigo('NCODIGO', 'CLIENTES');
  if not ModuloDatos.DataModuleBDD.FDTransaction.Active then
    ModuloDatos.DataModuleBDD.FDTransaction.StartTransaction;

  if not DataSource.DataSet.Active then
    DataSource.DataSet.Open;

  if not(DataSource.DataSet.State in [dsEdit, dsInsert]) then
    DataSource.DataSet.Edit;

  DBNavigator.Enabled := True;
end;

procedure TFormMenuClientes.DataSourceDataChange(Sender: TObject;
  Field: TField);
begin
  DataSource.DataSet.Edit;

  CodigoSeleccionado := -1;
  if (DataSource <> nil) and (DataSource.DataSet <> nil) and
    (DataSource.DataSet.Active) and (not DataSource.DataSet.IsEmpty) then
  begin
    CodigoSeleccionado := DataSource.DataSet.Fields[0].AsInteger;

  end
  else
    ShowMessage('No hay datos en el DataSet o el DataSource está vacío.');

end;

procedure TFormMenuClientes.DBNavigatorClick(Sender: TObject;
  Button: TNavigateBtn);
begin
  case Button of
    nbPost:
      begin
        try
          if not ModuloDatos.DataModuleBDD.FDTransaction.Active then
            ModuloDatos.DataModuleBDD.FDTransaction.StartTransaction;

          if DataSource.DataSet.State in [dsEdit, dsInsert] then
            DataSource.DataSet.Post;

          ModuloDatos.DataModuleBDD.FDTransaction.Commit;
          ShowMessage('Cambios guardados correctamente.');
        except
          on E: Exception do
          begin
            if ModuloDatos.DataModuleBDD.FDTransaction.Active then
              ModuloDatos.DataModuleBDD.FDTransaction.Rollback;
            ShowMessage('Error al guardar: ' + E.Message);
          end;
        end;
      end;

    nbCancel:
      begin
        if ModuloDatos.DataModuleBDD.FDTransaction.Active then
          ModuloDatos.DataModuleBDD.FDTransaction.Rollback;

        if DataSource.DataSet.State in [dsEdit, dsInsert] then
          DataSource.DataSet.Cancel;

        ShowMessage('Cambios cancelados.');
      end;
  end;
  Self.Actualizar(Self);
end;

procedure TFormMenuClientes.Actualizar(Sender: TObject);
begin
  FDTable.Refresh;
  DataSource.DataSet.Refresh;
  DBGrid.Refresh;
end;

end.
