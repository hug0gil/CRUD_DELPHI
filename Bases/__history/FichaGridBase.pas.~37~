unit FichaGridBase;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.ComCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, ModuloDatos;

type
  TFormFichaGridBase = class(TForm)
    PanelAlbaranes: TPanel;
    PanelLineas: TPanel;
    PanelBtns: TPanel;
    Shape1: TShape;
    Shape2: TShape;
    btnAceptar: TButton;
    btnCancelar: TButton;
    ButtonBorrar: TButton;
    ButtonInsertar: TButton;
    ButtonActualizar: TButton;
    ButtonVer: TButton;
    LabelObservaciones: TLabel;
    LabelCodCliente: TLabel;
    LabelFecha: TLabel;
    Label1: TLabel;
    EditCodigo: TEdit;
    Edit1: TEdit;
    DateTimePicker1: TDateTimePicker;
    MemoObservaciones: TMemo;
    DBGrid: TDBGrid;
    DataSource: TDataSource;
    FDTable: TFDTable;
    FDTransactionTable: TFDTransaction;
    IntegerField1: TIntegerField;
    StringField1: TStringField;
    FMTBCDField1: TFMTBCDField;
    FMTBCDField2: TFMTBCDField;
    SmallintField1: TSmallintField;
    FMTBCDField3: TFMTBCDField;
    procedure FormActivate(Sender: TObject);
  private
    procedure ConfigurarConexion;
  public
  end;

var
  FormFichaGridBase: TFormFichaGridBase;

implementation

{$R *.dfm}

procedure TFormFichaGridBase.ConfigurarConexion;
begin
  try
    FDTable.Connection := ModuloDatos.DataModuleBDD.DataBaseFDConnection;
    FDTable.Transaction := FDTransactionTable;
  except
    on E: Exception do
      ShowMessage('Error configurando la conexión: ' + E.Message);
  end;
end;

procedure TFormFichaGridBase.FormActivate(Sender: TObject);
begin
  try
    ConfigurarConexion;

    if not FDTransactionTable.Active then
      FDTransactionTable.StartTransaction;

    if not FDTable.Active then
      FDTable.Open;

    if FDTable.IsEmpty then
      ShowMessage('La tabla no tiene datos.');

    DataSource.DataSet := FDTable;
    DBGrid.DataSource := DataSource;

    FDTable.Refresh;
    DataSource.DataSet.Refresh;
    DBGrid.Refresh;
  except
    on E: Exception do
      ShowMessage('Error al abrir la tabla: ' + E.Message);
  end;
end;

end.

