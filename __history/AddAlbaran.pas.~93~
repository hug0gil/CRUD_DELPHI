unit AddAlbaran;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet;

type
  TFormAddAlbaran = class(TForm)
    LabelCodigo: TLabel;
    LabelFecha: TLabel;
    LabelObservaciones: TLabel;
    LabelCliente: TLabel;
    ButtonAdd: TButton;
    ButtonCancelar: TButton;
    MemoObservaciones: TMemo;
    FechaDate: TDateTimePicker;

    ComboBoxCliente: TComboBox;
    Connection: TFDConnection;

    EditCodigo: TEdit;    procedure ButtonCancelarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ButtonAddClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    lastCode:Integer;

  end;

var
  FormAddAlbaran: TFormAddAlbaran;

implementation

{$R *.dfm}

procedure TFormAddAlbaran.ButtonAddClick(Sender: TObject);
var
  QueryInsertar: TFDQuery;
  FechaFormateada: string;
begin
  // Comprobar que todos los campos necesarios están completos
  if (ComboBoxCliente.Text = '') or
    (MemoObservaciones.Lines.Text = '') then
  begin
    MessageDlgPosHelp('Por favor, rellene todos los campos', TMsgDlgType.mtError, [mbOK],
      0, -1, -1, 'Error de inserción');
    Exit;
  end;

  // Comprobar que el código de cliente seleccionado está en la lista del ComboBox
  if ComboBoxCliente.ItemIndex = -1 then
  begin
    MessageDlg('Por favor, seleccione un cliente válido de la lista.', mtError, [mbOK], 0);
    Exit;
  end;

  // Obtener la fecha seleccionada y formatearla a formato MM/DD/YYYY
  FechaFormateada := FormatDateTime('MM/DD/YYYY', FechaDate.Date);

  QueryInsertar := TFDQuery.Create(nil);
  try
    QueryInsertar.Connection := Connection;

    // SQL de inserción con parámetros
    QueryInsertar.SQL.Text := 'INSERT INTO ALBARAN (NCODIGO, DFECHA, COBSERVACIONES, NCOD_CLIENTE) VALUES (:Codigo, :Fecha, :Observaciones, :Cliente)';

    // Asignar valores a los parámetros
    QueryInsertar.ParamByName('Codigo').AsInteger := StrToInt(EditCodigo.Text);
    QueryInsertar.ParamByName('Fecha').AsString := FechaFormateada;
    QueryInsertar.ParamByName('Observaciones').AsString := MemoObservaciones.Lines.Text;
    QueryInsertar.ParamByName('Cliente').AsInteger := StrToInt(ComboBoxCliente.Text);

    // Ejecutar la consulta
    QueryInsertar.ExecSQL;

    // Mostrar mensaje de éxito con título personalizado
    MessageDlgPosHelp('El albarán ha sido añadido correctamente.', mtInformation, [mbOK], 0, -1, -1, '¡Éxito!');


  finally
    QueryInsertar.Free;
  end;

  // Cerrar el formulario después de la inserción
  Self.Close;
end;



procedure TFormAddAlbaran.ButtonCancelarClick(Sender: TObject);
begin
  Self.Close;
end;

procedure TFormAddAlbaran.FormCreate(Sender: TObject);
var
  QueryAlbaranes, QueryClientes: TFDQuery;
begin

  // Limpiar el MemoObservaciones
  MemoObservaciones.Lines.Clear;
  MemoObservaciones.Lines.Add
    ('Introduzca las observaciones que crea oportunas');

  // Crear y configurar la consulta para obtener el código máximo de albaranes
  QueryAlbaranes := TFDQuery.Create(nil);
  try
    QueryAlbaranes.Connection := Connection;
    QueryAlbaranes.SQL.Text := 'SELECT MAX(NCODIGO) FROM ALBARAN';
    QueryAlbaranes.Open;



    EditCodigo.Text := (IntToStr(lastCode));

  finally
    QueryAlbaranes.Free;
  end;

  // Crear y configurar la consulta para obtener los códigos de clientes
  QueryClientes := TFDQuery.Create(nil);
  try
    QueryClientes.Connection := Connection;
    QueryClientes.SQL.Text := 'SELECT NCODIGO FROM CLIENTES';
    QueryClientes.Open;

    // Cargar los códigos en el ComboBoxCliente
    while not QueryClientes.Eof do
    begin
      ComboBoxCliente.Items.Add(QueryClientes.FieldByName('NCODIGO').AsString);
      QueryClientes.Next;
    end;
  finally
    QueryClientes.Free;
  end;
end;

end.
