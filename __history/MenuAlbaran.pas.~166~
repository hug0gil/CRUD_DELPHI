unit MenuAlbaran;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool,
  FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait, Data.DB,
  FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Phys.FB, FireDAC.Phys.FBDef,
  Vcl.Grids, Vcl.DBGrids, Vcl.ComCtrls, Vcl.WinXPickers, Vcl.ExtCtrls,
  Vcl.Buttons, Vcl.DBCtrls,ModuloDatos;

type
  TFormAlbaran = class(TForm)
    FDQuerySelec: TFDQuery;
    ButtonVolver: TButton;
    DataSource: TDataSource;
    DBGrid: TDBGrid;
    DBNavigator: TDBNavigator;
    ButtonAgregar: TButton;
    ButtonEliminar: TButton;
    ButtonActualizar: TButton;
    FDTable1: TFDTable;
    procedure FormCreate(Sender: TObject);
    procedure ButtonVolverClick(Sender: TObject);
    procedure DataSourceDataChange(Sender: TObject; Field: TField);
    procedure ButtonAgregarClick(Sender: TObject);
    procedure ButtonActualizarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ButtonEliminarClick(Sender: TObject);
    procedure ObtenerLastCode(Sender: TObject);
  private
    QueryAlbaranes: TFDQuery;
    LastCodigo: Integer;
    CodigoSeleccionado: Integer;
  public


  end;

implementation

{$R *.dfm}

uses UpdateAlbaran, AddAlbaran, Main;

procedure TFormAlbaran.FormCreate(Sender: TObject);
begin

  QueryAlbaranes := TFDQuery.Create(nil);
  QueryAlbaranes.Connection := Connection;

  // Configurar el Query principal para la selección de albaranes
  FDQuerySelec.Connection := Connection;
  FDQuerySelec.SQL.Text := 'SELECT * FROM ALBARAN';
  FDQuerySelec.Open;
  DataSource.DataSet := FDQuerySelec;
  DBGrid.DataSource := DataSource;
  FDQuerySelec.MoveBy(-1);

  DBGrid.Columns[0].Title.Caption := 'Código';
  DBGrid.Columns[0].Width := 70;
  DBGrid.Columns[1].Title.Caption := 'Fecha';
  DBGrid.Columns[1].Width := 100;
  DBGrid.Columns[2].Title.Caption := 'Observaciones';
  DBGrid.Columns[2].Width := 90;
  DBGrid.Columns[3].Title.Caption := 'Código del cliente';
  DBGrid.Columns[3].Width := 120;

  Self.ObtenerLastCode(Self);
end;

procedure TFormAlbaran.ObtenerLastCode(Sender: TObject);
begin
  // Obtener el último código disponible
  QueryAlbaranes.SQL.Text := 'SELECT MAX(NCODIGO) FROM ALBARAN';
  QueryAlbaranes.Open;

  if not QueryAlbaranes.Fields[0].IsNull then
    LastCodigo := QueryAlbaranes.Fields[0].AsInteger + 1
  else
    LastCodigo := 1;
end;

procedure TFormAlbaran.ButtonActualizarClick(Sender: TObject);
var
  QueryClientes: TFDQuery;
  ClienteCodigo: Integer;
  ClienteCodigoStr: string;
begin
  FormUpdateAlbaran.CodigoAlbaran := CodigoSeleccionado;

  QueryClientes := TFDQuery.Create(nil);
  try
    QueryClientes.Connection := Connection;
    QueryClientes.SQL.Text := 'SELECT NCODIGO FROM CLIENTES';
    QueryClientes.Open;

    // Agregar cada código de cliente al ComboBox
    while not QueryClientes.Eof do
    begin
      FormUpdateAlbaran.ComboBoxCliente.Items.Add
        (QueryClientes.Fields[0].AsString);
      QueryClientes.Next;
    end;

    // Obtener el código del cliente desde el DBGrid
    ClienteCodigo := DBGrid.DataSource.DataSet.Fields[3].AsInteger;
    ClienteCodigoStr := IntToStr(ClienteCodigo);

    // Buscar el código de cliente en el ComboBox y seleccionar el índice correcto
    if FormUpdateAlbaran.ComboBoxCliente.Items.IndexOf(ClienteCodigoStr) >= 0
    then
    begin
      FormUpdateAlbaran.ComboBoxCliente.ItemIndex :=
        FormUpdateAlbaran.ComboBoxCliente.Items.IndexOf(ClienteCodigoStr);
    end
    else
    begin
      ShowMessage('El código de cliente no se encuentra en la lista.');
      FormUpdateAlbaran.ComboBoxCliente.ItemIndex := -1;
      // No seleccionar ningún item si el código no está disponible
    end;

  finally
    QueryClientes.Free;
  end;

  // Rellenar los otros campos
  FormUpdateAlbaran.FechaDate.DateTime := DBGrid.DataSource.DataSet.Fields[1]
    .AsDateTime;
  FormUpdateAlbaran.MemoObservaciones.Text := DBGrid.DataSource.DataSet.Fields
    [2].AsString;
  FormUpdateAlbaran.EditCodigo.Text := IntToStr(CodigoSeleccionado);

  FormUpdateAlbaran.ShowModal;
end;

procedure TFormAlbaran.ButtonAgregarClick(Sender: TObject);
var
  FormAddAlbaran: TFormAddAlbaran;
begin
  // Obtener el último código de albarán directamente desde la base de datos
  Self.ObtenerLastCode(Self);

  // Crear una nueva instancia de FormAddAlbaran
  FormAddAlbaran := TFormAddAlbaran.Create(Self);
  try
    // Asignar el último código disponible al campo de código
    FormAddAlbaran.EditCodigo.Text := IntToStr(LastCodigo);
    // Mostrar el formulario de añadir
    FormAddAlbaran.ShowModal;
  finally
    // Liberar la instancia de FormAddAlbaran después de que se cierre
    FormAddAlbaran.Free;
  end;
end;

procedure TFormAlbaran.ButtonEliminarClick(Sender: TObject);
var
  Confirmacion: Integer;
  DeleteQuery: TFDQuery;
begin
  // Verificar si se ha seleccionado un albarán
  if CodigoSeleccionado = -1 then
  begin
    ShowMessage('Por favor, seleccione un albarán para eliminar.');
    Exit;
  end;

  // Preguntar si estamos seguros de eliminar el albarán
  Confirmacion := MessageDlg('¿Está seguro de que desea eliminar este albarán?',
    mtConfirmation, [mbYes, mbNo], 0);

  // Si el usuario selecciona "Sí", proceder con la eliminación
  if Confirmacion = mrYes then
  begin
    try
      // Crear una nueva consulta para eliminar
      DeleteQuery := TFDQuery.Create(nil);
      try
        DeleteQuery.Connection := Connection;
        DeleteQuery.SQL.Text := 'DELETE FROM ALBARAN WHERE NCODIGO = :Codigo';
        DeleteQuery.ParamByName('Codigo').AsInteger := CodigoSeleccionado;
        DeleteQuery.ExecSQL; // Ejecutar la eliminación

        // Refrescar el DataSet original para mostrar los cambios
        FDQuerySelec.Close;
        FDQuerySelec.Open;

        // Mostrar mensaje de éxito
        ShowMessage('El albarán ha sido eliminado con éxito.');
      finally
        DeleteQuery.Free;
      end;

    except
      on E: Exception do
      begin
        // Mostrar mensaje de error en caso de excepciones
        ShowMessage('Error al eliminar el albarán: ' + E.Message);
      end;
    end;
  end;
end;

procedure TFormAlbaran.DataSourceDataChange(Sender: TObject; Field: TField);
begin
  if (DBGrid.DataSource <> nil) and (DBGrid.DataSource.DataSet <> nil) and
    (DBGrid.DataSource.DataSet.Active) and
    (not DBGrid.DataSource.DataSet.IsEmpty) then
  begin
    if DBGrid.DataSource.DataSet.Fields.Count > 0 then
    begin
      CodigoSeleccionado := DBGrid.DataSource.DataSet.Fields[0].AsInteger;
      ButtonActualizar.Enabled := True;
      ButtonEliminar.Enabled := True;
    end
    else
    begin
      ShowMessage('Error: No hay campos en el DataSet.');
      CodigoSeleccionado := -1;
      ButtonActualizar.Enabled := False;
      ButtonEliminar.Enabled := False;
    end;
  end
  else
  begin
    CodigoSeleccionado := -1;
    ButtonActualizar.Enabled := False;
    ButtonEliminar.Enabled := False;
  end;
end;

procedure TFormAlbaran.ButtonVolverClick(Sender: TObject);
begin
  FormMain.Show;
  Self.Hide;
end;

procedure TFormAlbaran.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  QueryAlbaranes.Free;
  Application.Terminate;
end;

end.
